// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(in=true,sel=address[3..5],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
	And(a=load,b=a,out=z0);
	And(a=load,b=b,out=z1);
	And(a=load,b=c,out=z2);
	And(a=load,b=d,out=z3);
	And(a=load,b=e,out=z4);
	And(a=load,b=f,out=z5);
	And(a=load,b=g,out=z6);
	And(a=load,b=h,out=z7);
	RAM8(in=in,load=z0,address=address[0..2],out=a0);
	RAM8(in=in,load=z1,address=address[0..2],out=a1);
    RAM8(in=in,load=z2,address=address[0..2],out=a2);
	RAM8(in=in,load=z3,address=address[0..2],out=a3);
	RAM8(in=in,load=z4,address=address[0..2],out=a4);
	RAM8(in=in,load=z5,address=address[0..2],out=a5);
	RAM8(in=in,load=z6,address=address[0..2],out=a6);
	RAM8(in=in,load=z7,address=address[0..2],out=a7);
    Mux8Way16(a=a0,b=a1,c=a2,d=a3,e=a4,f=a5,g=a6,h=a7,sel=address[3..5],out=out);
	
}